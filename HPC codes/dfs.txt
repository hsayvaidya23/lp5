#include "bits/stdc++.h"
#include <omp.h>
using namespace std;

const int MAX = 100000;
vector<int> graph[MAX];
bool visited[MAX];

void dfs(int node) {
    stack<int> s;
    s.push(node);
    while(!s.empty()) {
        int curr = s.top();
        s.pop();
        if(!visited[curr]) {
            visited[curr] = true;
            cout << curr << " ";
            vector<int> univisited_nei;
            #pragma 
            for(int i=0; i<graph[curr].size(); i++) {
                int adj = graph[curr][i];
                if(!visited[adj]) {
                    #pragma
                    univisited_nei.push_back(adj);
                }
            }
            for(int neighbor: univisited_nei) {
                s.push(neighbor);
            }
        }
    }
}

int main() {
    int n, m, start;
    cout << "Enter nodes, edges & start : ";
    cin >> n >> m >> start;
    cout << "Enter edges: \n";
    for(int i=0; i<m; i++) {
        int u, v;
        cin >> u >> v;
        graph[u].push_back(v);
        graph[v].push_back(u);
    }
    for(int i=0; i<n; i++) {
        visited[i] = false;
    }
    dfs(start);
    return 0;
}